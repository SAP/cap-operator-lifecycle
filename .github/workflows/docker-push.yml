name: Docker push

on:
  release:
    types: [published]
    
concurrency: release-${{ github.event.release.tag_name }}

env:
  REGISTRY: ghcr.io

defaults:
  run:
    shell: bash

jobs:
  get_component:
    name: Get component from tag
    runs-on: ubuntu-22.04
    outputs:
      proceed_with_docker_push: ${{ steps.check_release_tag.outputs.proceed }}
      component: ${{ steps.extract_component.outputs.component }}
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Extract component from tag
      id: extract_component
      run: |
        echo "component=$(echo ${{ github.event.release.tag_name }} | grep -oP '^(.*?)\/' | rev | cut -c2- | rev )" >> $GITHUB_OUTPUT

    - name: Print component
      run: |
        echo ${{ steps.extract_component.outputs.component }}
    
    - name: Check release tag
      id: check_release_tag
      run: |
        if [[ '${{ steps.extract_component.outputs.component }}' == 'manager' ]]
        then
          echo "Release tag created for cap-operator-manager, we can proceed with docker push."
          echo "proceed=true" >> $GITHUB_OUTPUT
        else
          echo "Release tag doesn't correspond to cap-operator-manager, skip!!!"
          echo "proceed=false" >> $GITHUB_OUTPUT
        fi
            
  docker_build_and_push:
    name: Docker build and push
    runs-on: ubuntu-22.04
    needs: [get_component]
    if: needs.get_component.outputs.proceed_with_docker_push == 'true'
    outputs:
      version: ${{ steps.extract-metadata.outputs.version }}
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Prepare repository name
      id: prepare-repository-name
      run: |
        repository=$REGISTRY/${{ github.repository }}/cap-operator-manager
        echo "repository=${repository,,}" >> $GITHUB_OUTPUT

    - name: Extract metadata (tags, labels) for Docker
      id: extract-metadata
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.prepare-repository-name.outputs.repository }}
        tags: |
          type=match,pattern=manager/v(\d.\d.\d),group=1,value=${{ github.event.release.tag_name }}

    - name: Build and push docker image
      uses: docker/build-push-action@v4
      with:
        file: Dockerfile
        platforms: linux/amd64,linux/arm64
        context: .
        cache-from: |
          type=gha,scope=sha-${{ github.sha }}
          type=gha,scope=${{ github.ref_name }}
          type=gha,scope=${{ github.base_ref || 'main' }}
          type=gha,scope=main
        cache-to: |
          type=gha,scope=sha-${{ github.sha }},mode=max
          type=gha,scope=${{ github.ref_name }},mode=max
        push: true
        tags: ${{ steps.extract-metadata.outputs.tags }}
        labels: ${{ steps.extract-metadata.outputs.labels }}
    
    - name: Print Outputs
      run: |
        echo "Tags: ${{ steps.extract-metadata.outputs.tags }}"
        echo "Labels: ${{ steps.extract-metadata.outputs.labels }}"
  
  generate_manifests:
    uses: ./.github/workflows/generate-manifest.yml
    needs: [get_component, docker_build_and_push]
    if: needs.get_component.outputs.proceed_with_docker_push == 'true'
    with:
      version: ${{ needs.docker_build_and_push.outputs.version }}
      upload_url: ${{ github.event.release.upload_url }}