{{- if and (.Capabilities.APIVersions.Has "cert-manager.io/v1") (eq .Values.subscriptionServer.certificateManager "CertManager") }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{.Release.Name}}-subscription-server
  namespace: {{.Values.subscriptionServer.istioSystemNamespace}}
spec:
  commonName: {{.Values.subscriptionServer.domain}}
  secretName: {{.Release.Name}}-subscription-server-cert-manager
  issuerRef:
    {{- with .Values.subscriptionServer.certificateConfig.certManager.issuerGroup }}
    group: {{ . }}
    {{- end }}
    {{- with .Values.subscriptionServer.certificateConfig.certManager.issuerKind }}
    kind: {{ . }}
    {{- end }}
    {{- with .Values.subscriptionServer.certificateConfig.certManager.issuerName }}
    name: {{ . }}
    {{- end }}
{{- else if and (.Capabilities.APIVersions.Has "cert.gardener.cloud/v1alpha1") (eq .Values.subscriptionServer.certificateManager "Gardener") }}
---
apiVersion: cert.gardener.cloud/v1alpha1
kind: Certificate
metadata:
  name: {{.Release.Name}}-subscription-server
  namespace: {{.Values.subscriptionServer.istioSystemNamespace}}
spec:
  commonName: {{.Values.subscriptionServer.domain}}
  secretRef:
    name: {{.Release.Name}}-subscription-server-gardener
  {{- if .Values.subscriptionServer.certificateConfig.gardener.issuerName }}
  issuerRef:
    name: {{.Values.subscriptionServer.certificateConfig.gardener.issuerName}}
    {{- if .Values.subscriptionServer.certificateConfig.gardener.issuerNamespace }}
    namespace: {{.Values.subscriptionServer.certificateConfig.gardener.issuerNamespace}}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .Capabilities.APIVersions.Has "dns.gardener.cloud/v1alpha1" }}
---
apiVersion: dns.gardener.cloud/v1alpha1
kind: DNSEntry
metadata:
  annotations:
    dns.gardener.cloud/class: garden
  name: {{.Release.Name}}-subscription-server
  namespace: {{.Release.Namespace}}
spec:
  dnsName: {{.Values.subscriptionServer.domain}}
  targets:
  - {{.Values.subscriptionServer.dnsTarget}}
{{- end }}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{.Release.Name}}-subscription-server
  namespace: {{.Release.Namespace}}
spec:
  selector:
  {{- range $key, $val := .Values.subscriptionServer.ingressGatewayLabels }}
    {{ $key }}: {{ $val }}
  {{- end}}
  servers:
  - hosts:
    - {{.Values.subscriptionServer.domain}}
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      {{- if and (.Capabilities.APIVersions.Has "cert-manager.io/v1") (eq .Values.subscriptionServer.certificateManager "CertManager") }}
      credentialName: {{.Release.Name}}-subscription-server-cert-manager
      {{- else if and (.Capabilities.APIVersions.Has "cert.gardener.cloud/v1alpha1") (eq .Values.subscriptionServer.certificateManager "Gardener") }}
      credentialName: {{.Release.Name}}-subscription-server-gardener
      {{- end }}
      mode: OPTIONAL_MUTUAL
{{- if (ne .Values.subscriptionServer.certificateConfig.additionalCACertificate "") }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- if and (.Capabilities.APIVersions.Has "cert-manager.io/v1") (eq .Values.subscriptionServer.certificateManager "CertManager") }}
  name: {{.Release.Name}}-subscription-server-cert-manager-cacert
  {{- else if and (.Capabilities.APIVersions.Has "cert.gardener.cloud/v1alpha1") (eq .Values.subscriptionServer.certificateManager "Gardener") }}
  name: {{.Release.Name}}-subscription-server-gardener-cacert
  {{- end }}
  namespace: {{.Values.subscriptionServer.istioSystemNamespace}}
type: Opaque
data:
  ca.crt: {{ .Values.subscriptionServer.certificateConfig.additionalCACertificate | b64enc | quote }}
{{- end}}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{.Release.Name}}-subscription-server
  namespace: {{.Release.Namespace}}
spec:
  gateways:
  - {{.Release.Name}}-subscription-server
  hosts:
  - {{.Values.subscriptionServer.domain}}
  http:
  - match:
    - method:
        regex: PUT|DELETE
      uri:
        prefix: /sms/provision/
    - method:
        regex: PUT|DELETE
      uri:
        prefix: /provision/
    route:
    - destination:
        host: {{.Release.Name}}-subscription-server.{{.Release.Namespace}}.svc.cluster.local
        port:
          number: {{.Values.subscriptionServer.port}}
      headers:
        request:
          set:
            x-forwarded-client-cert: '%DOWNSTREAM_PEER_CERT%'
      weight: 100
